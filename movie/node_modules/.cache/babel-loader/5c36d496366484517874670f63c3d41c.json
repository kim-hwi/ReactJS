{"ast":null,"code":"var _jsxFileName = \"/Users/kimhwi/Documents/programming/react/movie_app_2021/src/App.js\";\nimport React from \"react\"; //import PropTypes from \"prop-types\";\n\nimport axios from \"axios\";\nimport Movie from \"./Movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"loader__text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this) : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        year: movie.year,\n        title: movie.title,\n        summary: movie.summary,\n        poster: movie.medium_cover_image,\n        genres: movie.genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }, this)) // ))\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimhwi/Documents/programming/react/movie_app_2021/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAGE,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAC;AAFD,KADuB;;AAAA,SAM/BC,SAN+B,GAMnB,YAAY;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAC;AAACA,UAAAA,IAAI,EAAC;AAACF,YAAAA;AAAD;AAAN;AAAN,UAAyB,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAArC;AACD,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASD,QAAAA,SAAS,EAAG;AAArB,OAAd;AACA,KAT8B;AAAA;;AAU/BM,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,SAAL;AACD;;AAKHK,EAAAA,MAAM,GAAE;AACF,UAAM;AAACP,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAsB,KAAKF,KAAjC;AACA,wBACE;AAAS,MAAA,KAAK,EAAG,WAAjB;AAAA,gBACGC,SAAS,gBACJ;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACA;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADI,GAINC,MAAM,CAACO,GAAP,CAAWC,KAAK,iBAAK,QAAC,KAAD;AAEnB,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFS;AAGnB,QAAA,IAAI,EAAED,KAAK,CAACE,IAHO;AAInB,QAAA,KAAK,EAAEF,KAAK,CAACG,KAJM;AAKnB,QAAA,OAAO,EAAEH,KAAK,CAACI,OALI;AAMnB,QAAA,MAAM,EAAEJ,KAAK,CAACK,kBANK;AAOnB,QAAA,MAAM,EAAEL,KAAK,CAACM;AAPK,SACdN,KAAK,CAACC,EADQ;AAAA;AAAA;AAAA;AAAA,cAArB,CAJM,CAaR;;AAdJ;AAAA;AAAA;AAAA;AAAA,YADF;AAoBJ;;AAvC+B;;AAyCnC,eAAeb,GAAf","sourcesContent":["import React from \"react\";\n//import PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movies\"\n  \n\n  class App extends React.Component{\n    state = { \n      isLoading: true ,\n      movies:[]\n    };\n  \n    getMovies = async () => {\n      const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n     this.setState({movies, isLoading : false});\n    } \n    componentDidMount(){\n      this.getMovies();\n    }\n  \n\n  \n\n  render(){\n        const {isLoading, movies} = this.state;\n        return (\n          <section class = \"container\">\n            {isLoading \n              ? ( <div class=\"loader\">\n                  <span class=\"loader__text\">Loading...</span>\n              </div>) : (\n                movies.map(movie => (<Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />))\n              // ))\n        )}\n            \n          </section>\n      );\n   }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
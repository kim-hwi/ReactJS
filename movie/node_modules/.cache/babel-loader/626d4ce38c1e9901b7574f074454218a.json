{"ast":null,"code":"import React from \"react\"; //import PropTypes from \"prop-types\";\n//import axios from \"axios\";\n\nclass App extends React.Component {\n  // state = { \n  //   isLoading: true ,\n  //   movies:[]\n  // };\n  // getMovies = async () => {\n  //   //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n  // }\n  // componentDidMount(){\n  //   this.getMovies();\n  // }\n  // state = {\n  //   count : 0,\n  //   name : \"kim hwi\"\n  // }\n  // add = () => {\n  //   this.setState(current => ({count : current.count +1}));\n  //   this.setState({ name: \"who?\" });\n  // }\n  // minus = () => {\n  //   this.setState(current => ({ count: current.count - 1 }));\n  //   this.setState({ name: \"me?\" });\n  // }\n  render() {//const {isLoading} = this.state;\n    //return <div>{isLoading ? \"Loading...\" : \"ready\"}</div>;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimhwi/Documents/programming/react/movie_app_2021/src/App.js"],"names":["React","App","Component","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAIE,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAC/B;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAE,CACF;AACA;AACJ;;AAlC+B;;AAqCnC,eAAeF,GAAf","sourcesContent":["import React from \"react\";\n//import PropTypes from \"prop-types\";\n//import axios from \"axios\";\n\n  \n\n  class App extends React.Component{\n    // state = { \n    //   isLoading: true ,\n    //   movies:[]\n    // };\n  \n    // getMovies = async () => {\n    //   //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\n    // }\n    // componentDidMount(){\n    //   this.getMovies();\n    // }\n  \n\n  \n  // state = {\n  //   count : 0,\n  //   name : \"kim hwi\"\n  // }\n\n  // add = () => {\n  //   this.setState(current => ({count : current.count +1}));\n  //   this.setState({ name: \"who?\" });\n  // }\n\n  // minus = () => {\n  //   this.setState(current => ({ count: current.count - 1 }));\n  //   this.setState({ name: \"me?\" });\n  // }\n\n  render(){\n        //const {isLoading} = this.state;\n        //return <div>{isLoading ? \"Loading...\" : \"ready\"}</div>;\n   }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
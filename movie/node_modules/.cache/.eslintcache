[{"/Users/kimhwi/Documents/Programming/ReactJS.js/movie/src/index.js":"1","/Users/kimhwi/Documents/Programming/ReactJS.js/movie/src/App.js":"2","/Users/kimhwi/Documents/Programming/ReactJS.js/movie/src/Movies.js":"3"},{"size":221,"mtime":1625012531654,"results":"4","hashOfConfig":"5"},{"size":2454,"mtime":1625011019128,"results":"6","hashOfConfig":"5"},{"size":1225,"mtime":1625012506923,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9chxn8",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimhwi/Documents/Programming/ReactJS.js/movie/src/index.js",[],"/Users/kimhwi/Documents/Programming/ReactJS.js/movie/src/App.js",["15"],"import React from \"react\";\nimport PropTypes from \"prop-types\";//PropTypes 모듈을 이용하여 변수형이 다를경우 콘솔에 에러메시지 할당 but 예제 실행시 작동이 안되는것 같다.\nimport axios from \"axios\";//fatch의 상위레이어개념\nimport Movie from \"./Movies\"//동일폴더에 존재하는 파일 import\nimport './index.css';\n\n  class App extends React.Component{//componet를 extend한 class App생성\n    state = {\n      isLoading: true ,\n      movies:[]//movies 미리 선언, 값이 할당되지 않음.\n    };\n  \n    getMovies = async () => {//어싱크로노스로 실행하여 데이터를 모두 받기전 렌더되지 않도록힘\n      const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      //axios를 이용하여 proxy server에 있는 데이터를 movies에 할당. es 최신버전의 함수 활용\n      //await를 이용하여 axios가 모든 data를 가져올 수 있도록 기다림.\n     this.setState({movies, isLoading : false});//setState를 이용하여야 정보를 전달할 수 있음\n    } \n    componentDidMount() {//componet가 mount가 되며 실행되는 함수이며 getMovies();를 실행하도록 하였음.\n      this.getMovies();\n    }\n  \n\n  \n\n  render(){//렌더가 반복 실행되며 변경되는 컴포넌트에 대해서만 변경을 해주는 것이 리액트의 가장 큰 특징이며, 같은 홈페이지에서 새로고침 없이 \n        const {isLoading, movies} = this.state;\n        return (\n          <section className = \"container\">\n            {isLoading \n              ? ( <div className=\"loader\">\n                  <span className=\"loader__text\">Loading...</span>\n              </div>) : (\n                <div className=\"movies\">\n                  {movies.map(movie => (<Movie//map함수를 이용하여 server에서 받아온 movies에 접근하여 모든 변수들에 동시에 Movies.js에서 정의된 moive함수에 파라미터로 전달하여 npx를 활용하여 화면에 출력한다.\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                  />))}\n                  </div>\n              // ))\n        )}\n          </section>\n      );\n   }\n}\nexport default App;","/Users/kimhwi/Documents/Programming/ReactJS.js/movie/src/Movies.js",[],{"ruleId":"16","severity":1,"message":"17","line":2,"column":8,"nodeType":"18","messageId":"19","endLine":2,"endColumn":17},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar"]